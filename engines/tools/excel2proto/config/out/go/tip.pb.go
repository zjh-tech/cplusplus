// Code generated by protoc-gen-go.
// source: tip.proto
// DO NOT EDIT!

/*
Package config is a generated protocol buffer package.

It is generated from these files:
	tip.proto

It has these top-level messages:
	Tip
	Tipcfg
*/
package config

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Tip struct {
	Id    uint32 `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	Desc  string `protobuf:"bytes,2,opt,name=Desc" json:"Desc,omitempty"`
	Str   string `protobuf:"bytes,3,opt,name=Str" json:"Str,omitempty"`
	Value uint32 `protobuf:"varint,4,opt,name=Value" json:"Value,omitempty"`
}

func (m *Tip) Reset()                    { *m = Tip{} }
func (m *Tip) String() string            { return proto.CompactTextString(m) }
func (*Tip) ProtoMessage()               {}
func (*Tip) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Tipcfg struct {
	Datas map[uint32]*Tip `protobuf:"bytes,1,rep,name=datas" json:"datas,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Tipcfg) Reset()                    { *m = Tipcfg{} }
func (m *Tipcfg) String() string            { return proto.CompactTextString(m) }
func (*Tipcfg) ProtoMessage()               {}
func (*Tipcfg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Tipcfg) GetDatas() map[uint32]*Tip {
	if m != nil {
		return m.Datas
	}
	return nil
}

func init() {
	proto.RegisterType((*Tip)(nil), "config.tip")
	proto.RegisterType((*Tipcfg)(nil), "config.tipcfg")
}

var fileDescriptor0 = []byte{
	// 193 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0xc9, 0x2c, 0xd0,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xce, 0xcf, 0x4b, 0xcb, 0x4c, 0x57, 0x0a, 0xe4,
	0x62, 0x06, 0x0a, 0x0a, 0xf1, 0x71, 0x31, 0x79, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xf0, 0x06,
	0x01, 0x59, 0x42, 0x42, 0x5c, 0x2c, 0x2e, 0xa9, 0xc5, 0xc9, 0x12, 0x4c, 0x40, 0x11, 0xce, 0x20,
	0x30, 0x5b, 0x48, 0x80, 0x8b, 0x39, 0xb8, 0xa4, 0x48, 0x82, 0x19, 0x2c, 0x04, 0x62, 0x0a, 0x89,
	0x70, 0xb1, 0x86, 0x25, 0xe6, 0x94, 0xa6, 0x4a, 0xb0, 0x80, 0x35, 0x42, 0x38, 0x4a, 0x0d, 0x8c,
	0x5c, 0x6c, 0x40, 0x33, 0x93, 0xd3, 0xd2, 0x85, 0xf4, 0xb9, 0x58, 0x53, 0x12, 0x4b, 0x12, 0x8b,
	0x81, 0x26, 0x33, 0x6b, 0x70, 0x1b, 0x49, 0xea, 0x41, 0x6c, 0xd5, 0x83, 0x48, 0xeb, 0xb9, 0x80,
	0xe4, 0x5c, 0xf3, 0x4a, 0x8a, 0x2a, 0x83, 0x20, 0xea, 0xa4, 0x5c, 0xb9, 0xb8, 0x10, 0x82, 0x20,
	0x1b, 0xb3, 0x53, 0x2b, 0xa1, 0xce, 0x02, 0x31, 0x85, 0x14, 0xb9, 0x58, 0xcb, 0xc0, 0x36, 0x82,
	0x1c, 0xc6, 0x6d, 0xc4, 0x8d, 0x64, 0x60, 0x10, 0x44, 0xc6, 0x8a, 0xc9, 0x82, 0x31, 0x89, 0x0d,
	0xec, 0x49, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x36, 0x0f, 0x05, 0x5a, 0xf1, 0x00, 0x00,
	0x00,
}
