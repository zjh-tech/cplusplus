// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_msg_id.proto

#include "cs_msg_id.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
}  // namespace pb
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_cs_5fmsg_5fid_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_cs_5fmsg_5fid_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cs_5fmsg_5fid_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cs_5fmsg_5fid_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_cs_5fmsg_5fid_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017cs_msg_id.proto\022\002pb*\236\005\n\021eClient2GameMs"
  "gId\022\030\n\024cs_engine_min_msg_id\020\000\022\036\n\032c2s_cli"
  "ent_session_ping_id\020\001\022\036\n\032s2c_client_sess"
  "ion_pong_id\020\002\022\031\n\024sc_engine_min_msg_id\020\253\002"
  "\022\030\n\023cs_logic_min_msg_id\020\254\002\022\037\n\032cs_account"
  "_register_req_id\020\255\002\022\037\n\032sc_account_regist"
  "er_ack_id\020\256\002\022\034\n\027cs_account_login_req_id\020"
  "\257\002\022\034\n\027sc_account_login_ack_id\020\260\002\022\031\n\024cs_g"
  "ame_login_req_id\020\261\002\022\031\n\024sc_game_login_ack"
  "_id\020\262\002\022\034\n\027cs_create_player_req_id\020\263\002\022\034\n\027"
  "sc_create_player_ack_id\020\264\002\022\034\n\027cs_select_"
  "player_req_id\020\265\002\022\034\n\027sc_select_player_ack"
  "_id\020\266\002\022\030\n\023cs_exit_game_req_id\020\267\002\022\035\n\030cs_r"
  "econnect_game_req_id\020\270\002\022\035\n\030sc_reconnect_"
  "game_ack_id\020\271\002\022\032\n\025sc_server_time_ntf_id\020"
  "\272\002\022\021\n\014cs_gm_req_id\020\273\002\022\022\n\rsc_tip_ntf_id\020\274"
  "\002\022\030\n\023sc_errorcode_ntf_id\020\275\002\022\031\n\023sc_logic_"
  "max_msg_id\020\377\377\003b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cs_5fmsg_5fid_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cs_5fmsg_5fid_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cs_5fmsg_5fid_2eproto_once;
static bool descriptor_table_cs_5fmsg_5fid_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cs_5fmsg_5fid_2eproto = {
  &descriptor_table_cs_5fmsg_5fid_2eproto_initialized, descriptor_table_protodef_cs_5fmsg_5fid_2eproto, "cs_msg_id.proto", 702,
  &descriptor_table_cs_5fmsg_5fid_2eproto_once, descriptor_table_cs_5fmsg_5fid_2eproto_sccs, descriptor_table_cs_5fmsg_5fid_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_cs_5fmsg_5fid_2eproto::offsets,
  file_level_metadata_cs_5fmsg_5fid_2eproto, 0, file_level_enum_descriptors_cs_5fmsg_5fid_2eproto, file_level_service_descriptors_cs_5fmsg_5fid_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cs_5fmsg_5fid_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_cs_5fmsg_5fid_2eproto), true);
namespace pb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* eClient2GameMsgId_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_cs_5fmsg_5fid_2eproto);
  return file_level_enum_descriptors_cs_5fmsg_5fid_2eproto[0];
}
bool eClient2GameMsgId_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 299:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 309:
    case 310:
    case 311:
    case 312:
    case 313:
    case 314:
    case 315:
    case 316:
    case 317:
    case 65535:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
