// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cs_common.proto

#include "cs_common.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace pb {
class c2s_client_session_pingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<c2s_client_session_ping> _instance;
} _c2s_client_session_ping_default_instance_;
class s2c_client_session_pongDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<s2c_client_session_pong> _instance;
} _s2c_client_session_pong_default_instance_;
}  // namespace pb
static void InitDefaultsscc_info_c2s_client_session_ping_cs_5fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_c2s_client_session_ping_default_instance_;
    new (ptr) ::pb::c2s_client_session_ping();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::c2s_client_session_ping::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_c2s_client_session_ping_cs_5fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_c2s_client_session_ping_cs_5fcommon_2eproto}, {}};

static void InitDefaultsscc_info_s2c_client_session_pong_cs_5fcommon_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::pb::_s2c_client_session_pong_default_instance_;
    new (ptr) ::pb::s2c_client_session_pong();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::pb::s2c_client_session_pong::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_s2c_client_session_pong_cs_5fcommon_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_s2c_client_session_pong_cs_5fcommon_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_cs_5fcommon_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_cs_5fcommon_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_cs_5fcommon_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_cs_5fcommon_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::c2s_client_session_ping, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::pb::s2c_client_session_pong, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::pb::c2s_client_session_ping)},
  { 5, -1, sizeof(::pb::s2c_client_session_pong)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_c2s_client_session_ping_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::pb::_s2c_client_session_pong_default_instance_),
};

const char descriptor_table_protodef_cs_5fcommon_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017cs_common.proto\022\002pb\"\031\n\027c2s_client_sess"
  "ion_ping\"\031\n\027s2c_client_session_pongb\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_cs_5fcommon_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_cs_5fcommon_2eproto_sccs[2] = {
  &scc_info_c2s_client_session_ping_cs_5fcommon_2eproto.base,
  &scc_info_s2c_client_session_pong_cs_5fcommon_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_cs_5fcommon_2eproto_once;
static bool descriptor_table_cs_5fcommon_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_cs_5fcommon_2eproto = {
  &descriptor_table_cs_5fcommon_2eproto_initialized, descriptor_table_protodef_cs_5fcommon_2eproto, "cs_common.proto", 83,
  &descriptor_table_cs_5fcommon_2eproto_once, descriptor_table_cs_5fcommon_2eproto_sccs, descriptor_table_cs_5fcommon_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_cs_5fcommon_2eproto::offsets,
  file_level_metadata_cs_5fcommon_2eproto, 2, file_level_enum_descriptors_cs_5fcommon_2eproto, file_level_service_descriptors_cs_5fcommon_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_cs_5fcommon_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_cs_5fcommon_2eproto), true);
namespace pb {

// ===================================================================

void c2s_client_session_ping::InitAsDefaultInstance() {
}
class c2s_client_session_ping::_Internal {
 public:
};

c2s_client_session_ping::c2s_client_session_ping()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.c2s_client_session_ping)
}
c2s_client_session_ping::c2s_client_session_ping(const c2s_client_session_ping& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.c2s_client_session_ping)
}

void c2s_client_session_ping::SharedCtor() {
}

c2s_client_session_ping::~c2s_client_session_ping() {
  // @@protoc_insertion_point(destructor:pb.c2s_client_session_ping)
  SharedDtor();
}

void c2s_client_session_ping::SharedDtor() {
}

void c2s_client_session_ping::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const c2s_client_session_ping& c2s_client_session_ping::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_c2s_client_session_ping_cs_5fcommon_2eproto.base);
  return *internal_default_instance();
}


void c2s_client_session_ping::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.c2s_client_session_ping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* c2s_client_session_ping::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* c2s_client_session_ping::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.c2s_client_session_ping)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.c2s_client_session_ping)
  return target;
}

size_t c2s_client_session_ping::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.c2s_client_session_ping)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void c2s_client_session_ping::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.c2s_client_session_ping)
  GOOGLE_DCHECK_NE(&from, this);
  const c2s_client_session_ping* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<c2s_client_session_ping>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.c2s_client_session_ping)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.c2s_client_session_ping)
    MergeFrom(*source);
  }
}

void c2s_client_session_ping::MergeFrom(const c2s_client_session_ping& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.c2s_client_session_ping)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void c2s_client_session_ping::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.c2s_client_session_ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void c2s_client_session_ping::CopyFrom(const c2s_client_session_ping& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.c2s_client_session_ping)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool c2s_client_session_ping::IsInitialized() const {
  return true;
}

void c2s_client_session_ping::InternalSwap(c2s_client_session_ping* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata c2s_client_session_ping::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void s2c_client_session_pong::InitAsDefaultInstance() {
}
class s2c_client_session_pong::_Internal {
 public:
};

s2c_client_session_pong::s2c_client_session_pong()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pb.s2c_client_session_pong)
}
s2c_client_session_pong::s2c_client_session_pong(const s2c_client_session_pong& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:pb.s2c_client_session_pong)
}

void s2c_client_session_pong::SharedCtor() {
}

s2c_client_session_pong::~s2c_client_session_pong() {
  // @@protoc_insertion_point(destructor:pb.s2c_client_session_pong)
  SharedDtor();
}

void s2c_client_session_pong::SharedDtor() {
}

void s2c_client_session_pong::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const s2c_client_session_pong& s2c_client_session_pong::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_s2c_client_session_pong_cs_5fcommon_2eproto.base);
  return *internal_default_instance();
}


void s2c_client_session_pong::Clear() {
// @@protoc_insertion_point(message_clear_start:pb.s2c_client_session_pong)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* s2c_client_session_pong::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* s2c_client_session_pong::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:pb.s2c_client_session_pong)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:pb.s2c_client_session_pong)
  return target;
}

size_t s2c_client_session_pong::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:pb.s2c_client_session_pong)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void s2c_client_session_pong::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pb.s2c_client_session_pong)
  GOOGLE_DCHECK_NE(&from, this);
  const s2c_client_session_pong* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<s2c_client_session_pong>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pb.s2c_client_session_pong)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pb.s2c_client_session_pong)
    MergeFrom(*source);
  }
}

void s2c_client_session_pong::MergeFrom(const s2c_client_session_pong& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pb.s2c_client_session_pong)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void s2c_client_session_pong::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pb.s2c_client_session_pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void s2c_client_session_pong::CopyFrom(const s2c_client_session_pong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pb.s2c_client_session_pong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool s2c_client_session_pong::IsInitialized() const {
  return true;
}

void s2c_client_session_pong::InternalSwap(s2c_client_session_pong* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata s2c_client_session_pong::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace pb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::pb::c2s_client_session_ping* Arena::CreateMaybeMessage< ::pb::c2s_client_session_ping >(Arena* arena) {
  return Arena::CreateInternal< ::pb::c2s_client_session_ping >(arena);
}
template<> PROTOBUF_NOINLINE ::pb::s2c_client_session_pong* Arena::CreateMaybeMessage< ::pb::s2c_client_session_pong >(Arena* arena) {
  return Arena::CreateInternal< ::pb::s2c_client_session_pong >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
